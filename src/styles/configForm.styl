$greenShadow = #45f500;

$inputBorderColor = alpha($titlesColor, .2);
$inputBorderColorHover = alpha($titlesColor, .5);
$inputBorderColorFocus = $titlesColor;

inputStyle() {

  $inputBorder = 3px solid $inputBorderColor;

  padding: .3em;
  outline: 0;
  border: $inputBorder;
  border-radius: 3px;
  background-color: $formBackgroundColor;
  transition: border-color .3s ease-out;

  @media mobile {
    border-width: 6px;
    border-radius: 6px;
  }

  &:hover{
    border-color: $inputBorderColorHover;
  }

  &:active, &:focus {
    border-color: $inputBorderColorFocus;
  }
}

fontSizeResponsive() {
  font-size: 14px;

  @media mobile {
    font-size: 28px;
  }
}

$marginTopFormInput = 20px;


$actionButtonStyle {
  starWarsFontStyle();
  padding: 6px 15px 15px;
  outline: 0;
  border: 4px solid $titlesColor;
  border-radius: 15px;

  background: transparent;
  text-shadow: none;
  font-size: 50px;
  cursor: pointer;
  transition: box-shadow .3s ease-out, text-shadow .3s ease-out;

  &:focus, &:hover {
    box-shadow: -1px 1px 8px $greenShadow, 1px -1px 8px $greenShadow, inset -3px -2px 8px $greenShadow, inset 2px 3px 8px $greenShadow;
    text-shadow: -1px 1px 8px $greenShadow, 1px -1px 8px $greenShadow;
  }

  @media mobile {
    padding: 12px 30px 30px;
    border-width: 8px;
    border-radius: 30px;
    font-size: 100px;
  }
}

// Used only in the Logo input. The text is a outlined SVG Text
// Stroke font-character
// @param  {Integer} $stroke - Stroke width
// @param  {Color}   $color  - Stroke color
// @return {List}            - text-shadow list
stroke($stroke, $color) {
  $shadow = ();
  $from = $stroke * -1;
  $range = ($from)..($stroke);
  for $i in $range {
    for $j in $range {
      append($shadow, ($i)px ($j)px 0 $color);
      append($shadow, \,);
    }
  }
  pop($shadow);
  $shadow;
}

#configForm {
  display: flex;
  margin-top: 16px;
  margin-bottom: 100px;
  justify-content: center;
  color: $titlesColor;

  @media mobile {
    margin-top: 70px;
    margin-bottom: 160px;
  }

  form {
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 500px;
    font-family: $defaultFontFamily;

    @media mobile {
      width: 800px;
    }

    input, textarea {
      overflow-x: hidden;
      margin-top: $marginTopFormInput;
      margin-bottom: 0;
      width: 97%;
      color: $titlesColor;
      word-break: break-word;
      letter-spacing: .05em;
      fontSizeResponsive();

      inputStyle();
    }

    textarea {
      resize: none;

      &#f-logo {
        width: calc(97% - 22px);
        height: 92px;
        color: black;
        text-shadow: stroke(2, $titlesColor);
        font-size: 50px;
        font-family: StarWars;
        line-height: 86%;
        caret-color: $titlesColor; // partial support https://caniuse.com/#search=caret-color
        letter-spacing: initial;

        @media mobile {
          font-size: 100px;
          height: 184px;
          text-shadow: stroke(4, $titlesColor);
        }
      }
    }

    #playButton {
      @extend $actionButtonStyle;
      z-index: 10;
      margin-top: 20px;
    }

    #playButtonSpan {
      margin-top: 20px;
      fontSizeResponsive();
    }

    #downloadButton {
      @extend $actionButtonStyle;

      display: none;
      margin-bottom: 30px;
      font-size: 60px;
      animation: pulseDownloadButton 3s ease 0s infinite;

      &:focus, &:hover {
        text-shadow: -1px 1px 93px $greenShadow, 1px -1px 23px $greenShadow;
        animation: none;
      }

      &.show {
        display: block;
      }

      @media mobile {
        font-size: 120px;
      }
    }

    #f-intro {
      color: $introColor;
    }

    #f-text {
      height: 200px;

      @media mobile {
        height 400px;
      }
    }

    #f-logo, #f-title, #f-episode {
      text-align: center;
    }

    .center-checkbox {
      margin-top: $marginTopFormInput;
      user-select: none;

      label {
        display: inline;
        vertical-align: middle;
        cursor: pointer;
        fontSizeResponsive();

        @media mobile {
          margin-left: 15px;
        }
      }

      .regular-checkbox {
        display: block;
        margin-top: 0;
        opacity: 0;

        &:hover {
          &+label {
            border-color: $inputBorderColorHover;
          }
        }

        &:focus {
          &+label {
            border-color: $inputBorderColorFocus;
          }
        }

        &+label {
          inputStyle();
          display: inline-block;
          width: 9px;
          height: 9px;

          @media mobile {
            width: 18px;
            height: 18px;
          }
        }

        &:checked + label:after {
          position: relative;
          top: -4px;
          color: $titlesColor;
          content: '\25A0';
          letter-spacing: 0;
          cursor: pointer;
          fontSizeResponsive();

          @media mobile {
            top: -8px;
          }
        }
      }
    }
  }
}

@keyframes pulseDownloadButton {
    0%{
        text-shadow: none;
    }

    40%{
        text-shadow: -1px 1px 93px $greenShadow, 1px -1px 23px $greenShadow;
    }

    60%{
        text-shadow: -1px 1px 93px $greenShadow, 1px -1px 23px $greenShadow;
    }

    100%{
        text-shadow: none;
    }
}